{"version":3,"file":"request-C0hLSC6d.js","sources":["../../../src/api/request.ts"],"sourcesContent":["import axios from 'axios'\r\nimport type { AxiosInstance } from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport router from '@/router'\r\nimport type { ApiResponseBase } from '@/types/api'\r\nimport { ErrorType } from '@/types/api'\r\n\r\nconst service = axios.create({\r\n  baseURL: import.meta.env.VITE_APP_BASE_API,\r\n  timeout: 15000\r\n}) as AxiosInstance & {\r\n  <T>(config: any): Promise<T>\r\n}\r\n\r\nservice.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nservice.interceptors.response.use(\r\n  (response) => {\r\n    return response.data\r\n  },\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token')\r\n      router.push('/login')\r\n    }\r\n    ElMessage.error(error.message || 'Request Error')\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"names":["service","axios","config","token","error","response","_a","router","ElMessage"],"mappings":"wFAOM,MAAAA,EAAUC,EAAM,OAAO,CAC3B,QAAS,4BACT,QAAS,IACX,CAAC,EAIDD,EAAQ,aAAa,QAAQ,IACjBE,GAAA,CACF,MAAAC,EAAQ,aAAa,QAAQ,OAAO,EAC1C,OAAIA,IACFD,EAAO,QAAQ,cAAmB,UAAUC,CAAK,IAE5CD,CACT,EACSE,GACA,QAAQ,OAAOA,CAAK,CAE/B,EAEAJ,EAAQ,aAAa,SAAS,IAC3BK,GACQA,EAAS,KAETD,GAAA,OACH,QAAAE,EAAAF,EAAM,WAAN,YAAAE,EAAgB,UAAW,MAC7B,aAAa,WAAW,OAAO,EAC/BC,EAAO,KAAK,QAAQ,GAEZC,EAAA,MAAMJ,EAAM,SAAW,eAAe,EACzC,QAAQ,OAAOA,CAAK,CAAA,CAE/B"}