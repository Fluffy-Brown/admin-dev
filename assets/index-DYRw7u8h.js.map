{"version":3,"file":"index-DYRw7u8h.js","sources":["../../../src/shared_models/generated/enums.ts","../../../src/api/design.ts","../../../src/config/design-config.ts","../../../src/views/design/index.vue"],"sourcesContent":["// This file is auto-generated. Do not edit directly.\r\n\r\nexport enum AbilityType {\r\n    DirectDamage = 0,\n    Fix = 1,\n    Shield = 2,\n    MutualDamage = 3\r\n}\n\r\nexport enum AbilityAttribute {\r\n    None = 0,\n    Fire = 1,\n    Ice = 2,\n    Blood = 3,\n    Vamp = 4,\n    Death = 5,\n    Gun = 6,\n    Dexerity = 7,\n    Holy = 8\r\n}\n\r\nexport enum AbilityBuffUsage {\r\n    Apply = 0,\n    Check = 1,\n    Consume = 2\r\n}\n\r\nexport enum ActionType {\r\n    Active = 0,\n    Passive = 1\r\n}\n\r\nexport enum ActionSubType {\r\n    Move = 0,\n    NormalAttack = 1,\n    UseAbility = 2,\n    Shield = 3,\n    Fix = 4,\n    Energy = 5,\n    Buff = 6,\n    DirectDamage = 7,\n    MutualDamage = 8\r\n}\n\r\nexport enum EffectAnchorTarget {\r\n    None = 0,\n    Self = 1,\n    Opponent = 2\r\n}\n\r\nexport enum EffectAnchorType {\r\n    Top = 0,\n    Head = 1,\n    Body = 2,\n    Front = 3,\n    Hand = 4,\n    Weapon = 5,\n    Feet = 6,\n    Ground = 7,\n    TopFront = 8,\n    TopBehind = 9,\n    TopTop = 10\r\n}\n\r\nexport enum HWEffectType {\r\n    FromExplosive = 0,\n    Projectile = 1,\n    Laser = 2,\n    ToExplosive = 3\r\n}\n\r\nexport enum FeedbackType {\r\n    None = 0,\n    Attack = 1,\n    BigAttack = 2,\n    Heal = 3,\n    ShieldBlock = 4\r\n}\n\r\nexport enum EffectType {\r\n    None = 0,\n    Explosion = 1,\n    Shield = 2,\n    Aura = 3,\n    Dash = 4,\n    Nuclear = 5,\n    Dust = 6,\n    Hit_Large = 7,\n    Hit_Small = 8,\n    Splatter_Small = 9,\n    Heal = 10\r\n}\n\r\nexport enum AuditType {\r\n    Unknown = 0,\n    Login = 1\r\n}\n\r\nexport enum BaseFurnitureType {\r\n    Monument = 0,\n    SandTable = 1,\n    WarHorn = 2\r\n}\n\r\nexport enum BattleResultType {\r\n    Pending = 0,\n    Win = 1,\n    Lose = 2\r\n}\n\r\nexport enum BuffType {\r\n    Death = 0,\n    Burn = 1,\n    Freeze = 2,\n    Wund = 3,\n    Bleed = 4,\n    Vamp = 5,\n    Life = 6,\n    Dex = 7,\n    Strength = 8,\n    Spike = 9,\n    Iron = 10,\n    Heal = 11\r\n}\n\r\nexport enum BuffTarget {\r\n    Self = 0,\n    Opponent = 1\r\n}\n\r\nexport enum BuffCheckTiming {\r\n    Apply = 0,\n    Frame = 1,\n    GetHit = 2,\n    Hit = 3,\n    Passive = 4\r\n}\n\r\nexport enum CharacterSessionStatue {\r\n    OnGoing = 0,\n    Failed = 1,\n    ChallengingHoF = 2,\n    Finished = 3,\n    Quit = 99\r\n}\n\r\nexport enum ChipType {\r\n    None = 0,\n    Ruby = 1,\n    // EventDesign\r\n        Sapphire = 2,\n    Active = 0,\n    Topaz = 3       // Passive ActionDesign\r\n}\n\r\nexport enum ChipUsage {\r\n    All = 0,\n    ComboOnly = 1,\n    ShopOnly = 2\r\n}\n\r\nexport enum ChipPackType {\r\n    All = 0,\n    Ruby = 1,\n    Topaz = 2,\n    Sapphire = 3\r\n}\n\r\nexport enum EventType {\r\n    Time = 0,\n    Move = 1,\n    Attack = 2,\n    UseAbility = 3,\n    Block = 4,\n    Hit = 5,\n    BeingHit = 6,\n    Fix = 7,\n    HpDrop = 8,\n    GamePhase = 9,\n    ApplyBuff = 10,\n    ApplyDebuff = 11,\n    EarnShield = 12\r\n}\n\r\nexport enum EventTarget {\r\n    Self = 0,\n    Enemy = 1\r\n}\n\r\nexport enum IapType {\r\n    None = 0\r\n}\n\r\nexport enum StringSourceType {\r\n    DesignStrings = 0,\n    CodeStrings = 1\r\n}\n\r\nexport enum UserType {\r\n    None = 0,\n    Normal = 1,\n    Admin = 99,\n    CommunityManager = 100\r\n}\n\r\nexport enum LanguageType {\r\n    English = 0,\n    Chinese = 1,\n    ChineseTraditional = 2,\n    French = 3\r\n}\n\r\nexport enum ConnectType {\r\n    Device = 0,\n    Steam = 1\r\n}\n\r\n","import request from '@/api/request'\r\nimport { HWActionDesign } from '@/shared_models/generated/HWActionDesign'\r\n\r\nimport type { AdminLoadDesignResponse, ApiResponseBase, DeleteDesignRequest } from '@/types/api'\r\n\r\n\r\nexport const getDesignTable = (designName: string) => {\r\n  return request<AdminLoadDesignResponse>({\r\n    url: '/admin/AdminDesignManagement/LoadDesignData',\r\n    method: 'get',\r\n    params: { \r\n      designName,\r\n      _t: new Date().getTime()\r\n    },\r\n    headers: {\r\n      'Cache-Control': 'no-cache',\r\n      'Pragma': 'no-cache'\r\n    }\r\n  })\r\n}\r\n\r\nexport const upsertDesignRow = (params: {\r\n  designName: string,\r\n  designData: Partial<HWActionDesign>\r\n}) => {\r\n  return request({\r\n    url: '/admin/AdminDesignManagement/UpsertDesignRow',\r\n    method: 'post',\r\n    data: params\r\n  })\r\n}\r\n\r\n\r\nexport function deleteDesignRow(params: DeleteDesignRequest) {\r\n  return request<ApiResponseBase>({\r\n    url: '/admin/AdminDesignManagement/DeleteDesignRow',\r\n    method: 'post',\r\n    params,\r\n    data: {}\r\n  })\r\n}\r\n\r\nexport function refreshOSSOfOneDesign(designName: string) {\r\n  return request({\r\n    url: '/admin/AdminDesignManagement/RefreshOSSOfOneDesign',\r\n    method: 'post',\r\n    data: { designName }\r\n  })\r\n}\r\n","import {\r\n  AbilityAttribute,\n  AbilityBuffUsage,\n  AbilityType,\n  ActionSubType,\n  ActionType,\n  BaseFurnitureType,\n  BuffCheckTiming,\n  BuffTarget,\n  BuffType,\n  ChipPackType,\n  ChipType,\n  ChipUsage,\n  EffectAnchorTarget,\n  EffectAnchorType,\n  EffectType,\n  EventTarget,\n  EventType,\n  FeedbackType,\n  LanguageType,\n  StringSourceType\r\n} from '@/shared_models/generated/enums'\r\n\r\ntype DesignConfig = {\r\n  tableColumns: Array<{\r\n    label: string\r\n    prop: string\r\n    width: string\r\n    type?: string\r\n    enumType?: any\r\n  }>\r\n  formFields: Array<{\r\n    label: string\r\n    prop: string\r\n    type?: string\r\n    enumType?: any\r\n    inputType?: string\r\n    precision?: number\r\n  }>\r\n  rules: Record<string, any>\r\n}\r\n\r\ntype DesignConfigs = {\r\n  [key: string]: DesignConfig\r\n}\r\n\r\nconst calculateColumnWidth = (label: string): string => {\r\n  if (label === 'Id') return '80'\r\n  if (label.includes('Name')) return '150'\r\n  if (label.includes('Description')) return '250'\r\n  return Math.max(label.length * 10 + 20, 80) + ''\r\n}\r\n\r\nexport const configs: DesignConfigs = {\r\n  HWAbilityDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'AbilityDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'AbilityName',\r\n        prop: 'AbilityName',\r\n        width: calculateColumnWidth('AbilityName'),\r\n      },\r\n      { \r\n        label: 'AbilityType',\r\n        prop: 'AbilityType',\r\n        width: calculateColumnWidth('AbilityType'),\r\n        type: 'enum',\r\n        enumType: AbilityType\r\n      },\r\n      { \r\n        label: 'Argument',\r\n        prop: 'Argument',\r\n        width: calculateColumnWidth('Argument'),\r\n      },\r\n      { \r\n        label: 'Ammo',\r\n        prop: 'Ammo',\r\n        width: calculateColumnWidth('Ammo'),\r\n      },\r\n      { \r\n        label: 'EffectDesignId',\r\n        prop: 'EffectDesignId',\r\n        width: calculateColumnWidth('EffectDesignId'),\r\n      },\r\n      { \r\n        label: 'EnergyConsume',\r\n        prop: 'EnergyConsume',\r\n        width: calculateColumnWidth('EnergyConsume'),\r\n      },\r\n      { \r\n        label: 'AbilityDescription',\r\n        prop: 'AbilityDescription',\r\n        width: calculateColumnWidth('AbilityDescription'),\r\n      },\r\n      { \r\n        label: 'AttachBuffs',\r\n        prop: 'AttachBuffs',\r\n        width: calculateColumnWidth('AttachBuffs'),\r\n      },\r\n      { \r\n        label: 'AbilityBuffUsage',\r\n        prop: 'AbilityBuffUsage',\r\n        width: calculateColumnWidth('AbilityBuffUsage'),\r\n        type: 'enum',\r\n        enumType: AbilityBuffUsage\r\n      },\r\n      { \r\n        label: 'AbilityEnhanceScale',\r\n        prop: 'AbilityEnhanceScale',\r\n        width: calculateColumnWidth('AbilityEnhanceScale'),\r\n      },\r\n      { \r\n        label: 'AbilityAttribute',\r\n        prop: 'AbilityAttribute',\r\n        width: calculateColumnWidth('AbilityAttribute'),\r\n        type: 'enum',\r\n        enumType: AbilityAttribute\r\n      },\r\n      { \r\n        label: 'EffectType',\r\n        prop: 'EffectType',\r\n        width: calculateColumnWidth('EffectType'),\r\n        type: 'enum',\r\n        enumType: EffectType\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'AbilityDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'AbilityName',\r\n        prop: 'AbilityName',\r\n      },\r\n      {\r\n        label: 'AbilityType',\r\n        prop: 'AbilityType',\r\n        type: 'enum',\r\n        enumType: AbilityType,\r\n      },\r\n      {\r\n        label: 'Argument',\r\n        prop: 'Argument',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'Ammo',\r\n        prop: 'Ammo',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'EffectDesignId',\r\n        prop: 'EffectDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'EnergyConsume',\r\n        prop: 'EnergyConsume',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'AbilityDescription',\r\n        prop: 'AbilityDescription',\r\n      },\r\n      {\r\n        label: 'AttachBuffs',\r\n        prop: 'AttachBuffs',\r\n      },\r\n      {\r\n        label: 'AbilityBuffUsage',\r\n        prop: 'AbilityBuffUsage',\r\n        type: 'enum',\r\n        enumType: AbilityBuffUsage,\r\n      },\r\n      {\r\n        label: 'AbilityEnhanceScale',\r\n        prop: 'AbilityEnhanceScale',\r\n        type: 'number',\r\n        precision: 2,\r\n      },\r\n      {\r\n        label: 'AbilityAttribute',\r\n        prop: 'AbilityAttribute',\r\n        type: 'enum',\r\n        enumType: AbilityAttribute,\r\n      },\r\n      {\r\n        label: 'EffectType',\r\n        prop: 'EffectType',\r\n        type: 'enum',\r\n        enumType: EffectType,\r\n      },\r\n    ],\r\n    rules: {\r\n      AbilityName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      AbilityType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWActionDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'ActionDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'ActionDesignName',\r\n        prop: 'ActionDesignName',\r\n        width: calculateColumnWidth('ActionDesignName'),\r\n      },\r\n      { \r\n        label: 'Consume',\r\n        prop: 'Consume',\r\n        width: calculateColumnWidth('Consume'),\r\n      },\r\n      { \r\n        label: 'ActionType',\r\n        prop: 'ActionType',\r\n        width: calculateColumnWidth('ActionType'),\r\n        type: 'enum',\r\n        enumType: ActionType\r\n      },\r\n      { \r\n        label: 'ActionSubType',\r\n        prop: 'ActionSubType',\r\n        width: calculateColumnWidth('ActionSubType'),\r\n        type: 'enum',\r\n        enumType: ActionSubType\r\n      },\r\n      { \r\n        label: 'Argument',\r\n        prop: 'Argument',\r\n        width: calculateColumnWidth('Argument'),\r\n      },\r\n      { \r\n        label: 'Period',\r\n        prop: 'Period',\r\n        width: calculateColumnWidth('Period'),\r\n      },\r\n      { \r\n        label: 'DescriptionString',\r\n        prop: 'DescriptionString',\r\n        width: calculateColumnWidth('DescriptionString'),\r\n      },\r\n      { \r\n        label: 'EffectType',\r\n        prop: 'EffectType',\r\n        width: calculateColumnWidth('EffectType'),\r\n        type: 'enum',\r\n        enumType: EffectType\r\n      },\r\n      { \r\n        label: 'ChipUsage',\r\n        prop: 'ChipUsage',\r\n        width: calculateColumnWidth('ChipUsage'),\r\n        type: 'enum',\r\n        enumType: ChipUsage\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'ActionDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ActionDesignName',\r\n        prop: 'ActionDesignName',\r\n      },\r\n      {\r\n        label: 'Consume',\r\n        prop: 'Consume',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ActionType',\r\n        prop: 'ActionType',\r\n        type: 'enum',\r\n        enumType: ActionType,\r\n      },\r\n      {\r\n        label: 'ActionSubType',\r\n        prop: 'ActionSubType',\r\n        type: 'enum',\r\n        enumType: ActionSubType,\r\n      },\r\n      {\r\n        label: 'Argument',\r\n        prop: 'Argument',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'Period',\r\n        prop: 'Period',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'DescriptionString',\r\n        prop: 'DescriptionString',\r\n      },\r\n      {\r\n        label: 'EffectType',\r\n        prop: 'EffectType',\r\n        type: 'enum',\r\n        enumType: EffectType,\r\n      },\r\n      {\r\n        label: 'ChipUsage',\r\n        prop: 'ChipUsage',\r\n        type: 'enum',\r\n        enumType: ChipUsage,\r\n      },\r\n    ],\r\n    rules: {\r\n      ActionDesignName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      ActionType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWActionEffectDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'ActionEffectDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'FromAnchorTarget',\r\n        prop: 'FromAnchorTarget',\r\n        width: calculateColumnWidth('FromAnchorTarget'),\r\n        type: 'enum',\r\n        enumType: EffectAnchorTarget\r\n      },\r\n      { \r\n        label: 'FromAnchorType',\r\n        prop: 'FromAnchorType',\r\n        width: calculateColumnWidth('FromAnchorType'),\r\n        type: 'enum',\r\n        enumType: EffectAnchorType\r\n      },\r\n      { \r\n        label: 'ToAnchorTarget',\r\n        prop: 'ToAnchorTarget',\r\n        width: calculateColumnWidth('ToAnchorTarget'),\r\n        type: 'enum',\r\n        enumType: EffectAnchorTarget\r\n      },\r\n      { \r\n        label: 'ToAnchorType',\r\n        prop: 'ToAnchorType',\r\n        width: calculateColumnWidth('ToAnchorType'),\r\n        type: 'enum',\r\n        enumType: EffectAnchorType\r\n      },\r\n      { \r\n        label: 'EffectAssetKey',\r\n        prop: 'EffectAssetKey',\r\n        width: calculateColumnWidth('EffectAssetKey'),\r\n      },\r\n      { \r\n        label: 'FeedbackType',\r\n        prop: 'FeedbackType',\r\n        width: calculateColumnWidth('FeedbackType'),\r\n        type: 'enum',\r\n        enumType: FeedbackType\r\n      },\r\n      { \r\n        label: 'Description',\r\n        prop: 'Description',\r\n        width: calculateColumnWidth('Description'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'ActionEffectDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'FromAnchorTarget',\r\n        prop: 'FromAnchorTarget',\r\n        type: 'enum',\r\n        enumType: EffectAnchorTarget,\r\n      },\r\n      {\r\n        label: 'FromAnchorType',\r\n        prop: 'FromAnchorType',\r\n        type: 'enum',\r\n        enumType: EffectAnchorType,\r\n      },\r\n      {\r\n        label: 'ToAnchorTarget',\r\n        prop: 'ToAnchorTarget',\r\n        type: 'enum',\r\n        enumType: EffectAnchorTarget,\r\n      },\r\n      {\r\n        label: 'ToAnchorType',\r\n        prop: 'ToAnchorType',\r\n        type: 'enum',\r\n        enumType: EffectAnchorType,\r\n      },\r\n      {\r\n        label: 'EffectAssetKey',\r\n        prop: 'EffectAssetKey',\r\n      },\r\n      {\r\n        label: 'FeedbackType',\r\n        prop: 'FeedbackType',\r\n        type: 'enum',\r\n        enumType: FeedbackType,\r\n      },\r\n      {\r\n        label: 'Description',\r\n        prop: 'Description',\r\n      },\r\n    ],\r\n    rules: {\r\n      FromAnchorType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWBaseFurnitureDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'BaseFurnitureDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'FurnitureName',\r\n        prop: 'FurnitureName',\r\n        width: calculateColumnWidth('FurnitureName'),\r\n      },\r\n      { \r\n        label: 'BaseFurnitureType',\r\n        prop: 'BaseFurnitureType',\r\n        width: calculateColumnWidth('BaseFurnitureType'),\r\n        type: 'enum',\r\n        enumType: BaseFurnitureType\r\n      },\r\n      { \r\n        label: 'SpriteKey',\r\n        prop: 'SpriteKey',\r\n        width: calculateColumnWidth('SpriteKey'),\r\n      },\r\n      { \r\n        label: 'FurnitureDescription',\r\n        prop: 'FurnitureDescription',\r\n        width: calculateColumnWidth('FurnitureDescription'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'BaseFurnitureDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'FurnitureName',\r\n        prop: 'FurnitureName',\r\n      },\r\n      {\r\n        label: 'BaseFurnitureType',\r\n        prop: 'BaseFurnitureType',\r\n        type: 'enum',\r\n        enumType: BaseFurnitureType,\r\n      },\r\n      {\r\n        label: 'SpriteKey',\r\n        prop: 'SpriteKey',\r\n      },\r\n      {\r\n        label: 'FurnitureDescription',\r\n        prop: 'FurnitureDescription',\r\n      },\r\n    ],\r\n    rules: {\r\n      FurnitureName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      BaseFurnitureType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWBuffDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'BuffDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'BuffType',\r\n        prop: 'BuffType',\r\n        width: calculateColumnWidth('BuffType'),\r\n        type: 'enum',\r\n        enumType: BuffType\r\n      },\r\n      { \r\n        label: 'BuffPeriod',\r\n        prop: 'BuffPeriod',\r\n        width: calculateColumnWidth('BuffPeriod'),\r\n      },\r\n      { \r\n        label: 'BuffTarget',\r\n        prop: 'BuffTarget',\r\n        width: calculateColumnWidth('BuffTarget'),\r\n        type: 'enum',\r\n        enumType: BuffTarget\r\n      },\r\n      { \r\n        label: 'BuffName',\r\n        prop: 'BuffName',\r\n        width: calculateColumnWidth('BuffName'),\r\n      },\r\n      { \r\n        label: 'BuffDescription',\r\n        prop: 'BuffDescription',\r\n        width: calculateColumnWidth('BuffDescription'),\r\n      },\r\n      { \r\n        label: 'BasicArgument',\r\n        prop: 'BasicArgument',\r\n        width: calculateColumnWidth('BasicArgument'),\r\n      },\r\n      { \r\n        label: 'ScaleArgument',\r\n        prop: 'ScaleArgument',\r\n        width: calculateColumnWidth('ScaleArgument'),\r\n      },\r\n      { \r\n        label: 'Timing',\r\n        prop: 'Timing',\r\n        width: calculateColumnWidth('Timing'),\r\n        type: 'enum',\r\n        enumType: BuffCheckTiming\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'BuffDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'BuffType',\r\n        prop: 'BuffType',\r\n        type: 'enum',\r\n        enumType: BuffType,\r\n      },\r\n      {\r\n        label: 'BuffPeriod',\r\n        prop: 'BuffPeriod',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'BuffTarget',\r\n        prop: 'BuffTarget',\r\n        type: 'enum',\r\n        enumType: BuffTarget,\r\n      },\r\n      {\r\n        label: 'BuffName',\r\n        prop: 'BuffName',\r\n      },\r\n      {\r\n        label: 'BuffDescription',\r\n        prop: 'BuffDescription',\r\n      },\r\n      {\r\n        label: 'BasicArgument',\r\n        prop: 'BasicArgument',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ScaleArgument',\r\n        prop: 'ScaleArgument',\r\n        type: 'number',\r\n        precision: 2,\r\n      },\r\n      {\r\n        label: 'Timing',\r\n        prop: 'Timing',\r\n        type: 'enum',\r\n        enumType: BuffCheckTiming,\r\n      },\r\n    ],\r\n    rules: {\r\n      BuffName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      BuffType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWCharacterDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'CharacterDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'CharacterDesignName',\r\n        prop: 'CharacterDesignName',\r\n        width: calculateColumnWidth('CharacterDesignName'),\r\n      },\r\n      { \r\n        label: 'CharacterDesignClass',\r\n        prop: 'CharacterDesignClass',\r\n        width: calculateColumnWidth('CharacterDesignClass'),\r\n      },\r\n      { \r\n        label: 'BasicAttackAbilityId',\r\n        prop: 'BasicAttackAbilityId',\r\n        width: calculateColumnWidth('BasicAttackAbilityId'),\r\n      },\r\n      { \r\n        label: 'AbilityIds',\r\n        prop: 'AbilityIds',\r\n        width: calculateColumnWidth('AbilityIds'),\r\n      },\r\n      { \r\n        label: 'BasicAttackValue',\r\n        prop: 'BasicAttackValue',\r\n        width: calculateColumnWidth('BasicAttackValue'),\r\n      },\r\n      { \r\n        label: 'Hp',\r\n        prop: 'Hp',\r\n        width: calculateColumnWidth('Hp'),\r\n      },\r\n      { \r\n        label: 'ActionSpeedInFrame',\r\n        prop: 'ActionSpeedInFrame',\r\n        width: calculateColumnWidth('ActionSpeedInFrame'),\r\n      },\r\n      { \r\n        label: 'AbilityAttributesString',\r\n        prop: 'AbilityAttributesString',\r\n        width: calculateColumnWidth('AbilityAttributesString'),\r\n      },\r\n      { \r\n        label: 'DefaultEvents',\r\n        prop: 'DefaultEvents',\r\n        width: calculateColumnWidth('DefaultEvents'),\r\n      },\r\n      { \r\n        label: 'DefaultActions',\r\n        prop: 'DefaultActions',\r\n        width: calculateColumnWidth('DefaultActions'),\r\n      },\r\n      { \r\n        label: 'DefaultAIGraphJson',\r\n        prop: 'DefaultAIGraphJson',\r\n        width: calculateColumnWidth('DefaultAIGraphJson'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'CharacterDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'CharacterDesignName',\r\n        prop: 'CharacterDesignName',\r\n      },\r\n      {\r\n        label: 'CharacterDesignClass',\r\n        prop: 'CharacterDesignClass',\r\n      },\r\n      {\r\n        label: 'BasicAttackAbilityId',\r\n        prop: 'BasicAttackAbilityId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'AbilityIds',\r\n        prop: 'AbilityIds',\r\n      },\r\n      {\r\n        label: 'BasicAttackValue',\r\n        prop: 'BasicAttackValue',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'Hp',\r\n        prop: 'Hp',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ActionSpeedInFrame',\r\n        prop: 'ActionSpeedInFrame',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'AbilityAttributesString',\r\n        prop: 'AbilityAttributesString',\r\n      },\r\n      {\r\n        label: 'DefaultEvents',\r\n        prop: 'DefaultEvents',\r\n      },\r\n      {\r\n        label: 'DefaultActions',\r\n        prop: 'DefaultActions',\r\n      },\r\n      {\r\n        label: 'DefaultAIGraphJson',\r\n        prop: 'DefaultAIGraphJson',\r\n      },\r\n    ],\r\n    rules: {\r\n      CharacterDesignName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n    }\r\n  },\r\n  HWChipAffixDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'ChipAffixDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'SpeedIncrease',\r\n        prop: 'SpeedIncrease',\r\n        width: calculateColumnWidth('SpeedIncrease'),\r\n      },\r\n      { \r\n        label: 'HpIncrease',\r\n        prop: 'HpIncrease',\r\n        width: calculateColumnWidth('HpIncrease'),\r\n      },\r\n      { \r\n        label: 'AtkIncrease',\r\n        prop: 'AtkIncrease',\r\n        width: calculateColumnWidth('AtkIncrease'),\r\n      },\r\n      { \r\n        label: 'BuffToApply',\r\n        prop: 'BuffToApply',\r\n        width: calculateColumnWidth('BuffToApply'),\r\n      },\r\n      { \r\n        label: 'TargetChipType',\r\n        prop: 'TargetChipType',\r\n        width: calculateColumnWidth('TargetChipType'),\r\n        type: 'enum',\r\n        enumType: ChipType\r\n      },\r\n      { \r\n        label: 'AffixLevel',\r\n        prop: 'AffixLevel',\r\n        width: calculateColumnWidth('AffixLevel'),\r\n      },\r\n      { \r\n        label: 'AffixName',\r\n        prop: 'AffixName',\r\n        width: calculateColumnWidth('AffixName'),\r\n      },\r\n      { \r\n        label: 'AffixDescription',\r\n        prop: 'AffixDescription',\r\n        width: calculateColumnWidth('AffixDescription'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'ChipAffixDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'SpeedIncrease',\r\n        prop: 'SpeedIncrease',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'HpIncrease',\r\n        prop: 'HpIncrease',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'AtkIncrease',\r\n        prop: 'AtkIncrease',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'BuffToApply',\r\n        prop: 'BuffToApply',\r\n      },\r\n      {\r\n        label: 'TargetChipType',\r\n        prop: 'TargetChipType',\r\n        type: 'enum',\r\n        enumType: ChipType,\r\n      },\r\n      {\r\n        label: 'AffixLevel',\r\n        prop: 'AffixLevel',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'AffixName',\r\n        prop: 'AffixName',\r\n      },\r\n      {\r\n        label: 'AffixDescription',\r\n        prop: 'AffixDescription',\r\n      },\r\n    ],\r\n    rules: {\r\n      AffixName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      TargetChipType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWChipPackDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'ChipPackDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'ChipPackName',\r\n        prop: 'ChipPackName',\r\n        width: calculateColumnWidth('ChipPackName'),\r\n      },\r\n      { \r\n        label: 'ChipPackPrice',\r\n        prop: 'ChipPackPrice',\r\n        width: calculateColumnWidth('ChipPackPrice'),\r\n      },\r\n      { \r\n        label: 'ChipPackType',\r\n        prop: 'ChipPackType',\r\n        width: calculateColumnWidth('ChipPackType'),\r\n        type: 'enum',\r\n        enumType: ChipPackType\r\n      },\r\n      { \r\n        label: 'ChipPackDescription',\r\n        prop: 'ChipPackDescription',\r\n        width: calculateColumnWidth('ChipPackDescription'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'ChipPackDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ChipPackName',\r\n        prop: 'ChipPackName',\r\n      },\r\n      {\r\n        label: 'ChipPackPrice',\r\n        prop: 'ChipPackPrice',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ChipPackType',\r\n        prop: 'ChipPackType',\r\n        type: 'enum',\r\n        enumType: ChipPackType,\r\n      },\r\n      {\r\n        label: 'ChipPackDescription',\r\n        prop: 'ChipPackDescription',\r\n      },\r\n    ],\r\n    rules: {\r\n      ChipPackName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      ChipPackType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWComboDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'ComboDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'ComboString',\r\n        prop: 'ComboString',\r\n        width: calculateColumnWidth('ComboString'),\r\n      },\r\n      { \r\n        label: 'ComboActionId',\r\n        prop: 'ComboActionId',\r\n        width: calculateColumnWidth('ComboActionId'),\r\n      },\r\n      { \r\n        label: 'ComboDescription',\r\n        prop: 'ComboDescription',\r\n        width: calculateColumnWidth('ComboDescription'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'ComboDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ComboString',\r\n        prop: 'ComboString',\r\n      },\r\n      {\r\n        label: 'ComboActionId',\r\n        prop: 'ComboActionId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'ComboDescription',\r\n        prop: 'ComboDescription',\r\n      },\r\n    ],\r\n    rules: {\r\n    }\r\n  },\r\n  HWEventDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'EventDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'EventDesignName',\r\n        prop: 'EventDesignName',\r\n        width: calculateColumnWidth('EventDesignName'),\r\n      },\r\n      { \r\n        label: 'EventTarget',\r\n        prop: 'EventTarget',\r\n        width: calculateColumnWidth('EventTarget'),\r\n        type: 'enum',\r\n        enumType: EventTarget\r\n      },\r\n      { \r\n        label: 'EventType',\r\n        prop: 'EventType',\r\n        width: calculateColumnWidth('EventType'),\r\n        type: 'enum',\r\n        enumType: EventType\r\n      },\r\n      { \r\n        label: 'Argument',\r\n        prop: 'Argument',\r\n        width: calculateColumnWidth('Argument'),\r\n      },\r\n      { \r\n        label: 'GeneratePower',\r\n        prop: 'GeneratePower',\r\n        width: calculateColumnWidth('GeneratePower'),\r\n      },\r\n      { \r\n        label: 'DescriptionString',\r\n        prop: 'DescriptionString',\r\n        width: calculateColumnWidth('DescriptionString'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'EventDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'EventDesignName',\r\n        prop: 'EventDesignName',\r\n      },\r\n      {\r\n        label: 'EventTarget',\r\n        prop: 'EventTarget',\r\n        type: 'enum',\r\n        enumType: EventTarget,\r\n      },\r\n      {\r\n        label: 'EventType',\r\n        prop: 'EventType',\r\n        type: 'enum',\r\n        enumType: EventType,\r\n      },\r\n      {\r\n        label: 'Argument',\r\n        prop: 'Argument',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'GeneratePower',\r\n        prop: 'GeneratePower',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'DescriptionString',\r\n        prop: 'DescriptionString',\r\n      },\r\n    ],\r\n    rules: {\r\n      EventDesignName: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      EventType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWIapDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'IapDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'Name',\r\n        prop: 'Name',\r\n        width: calculateColumnWidth('Name'),\r\n      },\r\n      { \r\n        label: 'IapType',\r\n        prop: 'IapType',\r\n        width: calculateColumnWidth('IapType'),\r\n      },\r\n      { \r\n        label: 'Title',\r\n        prop: 'Title',\r\n        width: calculateColumnWidth('Title'),\r\n      },\r\n      { \r\n        label: 'Subtitle',\r\n        prop: 'Subtitle',\r\n        width: calculateColumnWidth('Subtitle'),\r\n      },\r\n      { \r\n        label: 'Description',\r\n        prop: 'Description',\r\n        width: calculateColumnWidth('Description'),\r\n      },\r\n      { \r\n        label: 'RewardString',\r\n        prop: 'RewardString',\r\n        width: calculateColumnWidth('RewardString'),\r\n      },\r\n      { \r\n        label: 'OrderIndex',\r\n        prop: 'OrderIndex',\r\n        width: calculateColumnWidth('OrderIndex'),\r\n      },\r\n      { \r\n        label: 'PackId',\r\n        prop: 'PackId',\r\n        width: calculateColumnWidth('PackId'),\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'IapDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'Name',\r\n        prop: 'Name',\r\n      },\r\n      {\r\n        label: 'IapType',\r\n        prop: 'IapType',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'Title',\r\n        prop: 'Title',\r\n      },\r\n      {\r\n        label: 'Subtitle',\r\n        prop: 'Subtitle',\r\n      },\r\n      {\r\n        label: 'Description',\r\n        prop: 'Description',\r\n      },\r\n      {\r\n        label: 'RewardString',\r\n        prop: 'RewardString',\r\n      },\r\n      {\r\n        label: 'OrderIndex',\r\n        prop: 'OrderIndex',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'PackId',\r\n        prop: 'PackId',\r\n      },\r\n    ],\r\n    rules: {\r\n      Name: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n      IapType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n  HWTranslateDesign: {\r\n    tableColumns: [\r\n      { \r\n        label: 'Id',\r\n        prop: 'TranslateDesignId',\r\n        width: calculateColumnWidth('Id'),\r\n      },\r\n      { \r\n        label: 'Message',\r\n        prop: 'Message',\r\n        width: calculateColumnWidth('Message'),\r\n      },\r\n      { \r\n        label: 'LanguageType',\r\n        prop: 'LanguageType',\r\n        width: calculateColumnWidth('LanguageType'),\r\n        type: 'enum',\r\n        enumType: LanguageType\r\n      },\r\n      { \r\n        label: 'Translation',\r\n        prop: 'Translation',\r\n        width: calculateColumnWidth('Translation'),\r\n      },\r\n      { \r\n        label: 'StringSourceType',\r\n        prop: 'StringSourceType',\r\n        width: calculateColumnWidth('StringSourceType'),\r\n        type: 'enum',\r\n        enumType: StringSourceType\r\n      },\r\n    ],\r\n    formFields: [\r\n      {\r\n        label: 'Id',\r\n        prop: 'TranslateDesignId',\r\n        type: 'number',\r\n        precision: 0,\r\n      },\r\n      {\r\n        label: 'Message',\r\n        prop: 'Message',\r\n      },\r\n      {\r\n        label: 'LanguageType',\r\n        prop: 'LanguageType',\r\n        type: 'enum',\r\n        enumType: LanguageType,\r\n      },\r\n      {\r\n        label: 'Translation',\r\n        prop: 'Translation',\r\n      },\r\n      {\r\n        label: 'StringSourceType',\r\n        prop: 'StringSourceType',\r\n        type: 'enum',\r\n        enumType: StringSourceType,\r\n      },\r\n    ],\r\n    rules: {\r\n      LanguageType: [{ required: true, message: 'Please select the type', trigger: 'change' }],\r\n    }\r\n  },\r\n}\r\nexport const getDesignConfig = (designName: string) => {\r\n  return configs[designName] || {}\r\n}\r\n","<template>\r\n  <div class=\"design-container\">\r\n    <div class=\"design-sidebar\">\r\n      <el-menu\r\n        :default-active=\"designName\"\r\n        class=\"design-menu\"\r\n        @select=\"handleDesignSelect\"\r\n      >\r\n        <el-menu-item\r\n          v-for=\"type in designTypes\"\r\n          :key=\"type.name\"\r\n          :index=\"type.name\"\r\n        >\r\n          <el-icon><component :is=\"type.icon\" /></el-icon>\r\n          <span>{{ type.title }}</span>\r\n        </el-menu-item>\r\n      </el-menu>\r\n    </div>\r\n\r\n    <div class=\"design-content\">\r\n      <div v-if=\"!config.tableColumns\" class=\"error-container\">\r\n        <el-empty \r\n          :description=\"`Design configuration for '${designName}' not found`\"\r\n        >\r\n          <template #extra>\r\n            <el-button type=\"primary\" @click=\"$router.push('/design')\">\r\n              Back to Design List\r\n            </el-button>\r\n          </template>\r\n        </el-empty>\r\n      </div>\r\n\r\n      <template v-else>\r\n        <div class=\"table-header\">\r\n          <div class=\"header-content\">\r\n            <h2>{{ designName }}</h2>\r\n            <div class=\"table-operations\">\r\n              <el-button type=\"primary\" @click=\"handleAdd\">Add New</el-button>\r\n              <el-button \r\n                type=\"warning\" \r\n                @click=\"handleRefreshOSS\" \r\n                :loading=\"refreshing\"\r\n              >\r\n                Refresh OSS\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <el-table \r\n          v-loading=\"loading\" \r\n          :data=\"paginatedData\" \r\n          style=\"width: 100%\"\r\n          :max-height=\"'70vh'\"\r\n          @sort-change=\"handleSortChange\"\r\n        >\r\n        <el-table-column label=\"Operations\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(row)\">\r\n                Edit\r\n              </el-button>\r\n              <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(row)\">\r\n                Delete\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <template v-for=\"(col, index) in tableColumns\" :key=\"col.prop\">\r\n            <el-table-column \r\n              v-if=\"col.type === 'enum'\" \r\n              v-bind=\"col\"\r\n              sortable=\"custom\"\r\n              :fixed=\"index === 0 ? 'left' : false\"\r\n            >\r\n              <template #header=\"{ column }\">\r\n                <div class=\"column-header\">\r\n                  <div class=\"header-title\">\r\n                    {{ col.label }}\r\n                    <el-icon v-if=\"sortBy === col.prop\" class=\"sort-icon\">\r\n                      <component :is=\"sortOrder === 'ascending' ? CaretTop : CaretBottom\" />\r\n                    </el-icon>\r\n                  </div>\r\n                  <el-select\r\n                    v-model=\"columnFilters[col.prop]\"\r\n                    size=\"small\"\r\n                    placeholder=\"Filter\"\r\n                    clearable\r\n                    class=\"column-filter\"\r\n                    @click.stop\r\n                  >\r\n                    <el-option\r\n                      v-for=\"opt in getEnumOptions(col.enumType)\"\r\n                      :key=\"opt.value\"\r\n                      :label=\"opt.label\"\r\n                      :value=\"opt.label\"\r\n                    />\r\n                  </el-select>\r\n                </div>\r\n              </template>\r\n              <template #default=\"{ row }\">\r\n                <el-tag>{{ getEnumName(row[col.prop], col.enumType) }}</el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column \r\n              v-else \r\n              v-bind=\"col\"\r\n              sortable=\"custom\"\r\n              :fixed=\"index === 0 ? 'left' : false\"\r\n            >\r\n              <template #header=\"{ column }\">\r\n                <div class=\"column-header\">\r\n                  <div class=\"header-title\">\r\n                    {{ col.label }}\r\n                    <el-icon v-if=\"sortBy === col.prop\" class=\"sort-icon\">\r\n                      <component :is=\"sortOrder === 'ascending' ? CaretTop : CaretBottom\" />\r\n                    </el-icon>\r\n                  </div>\r\n                  <el-input\r\n                    v-model=\"columnFilters[col.prop]\"\r\n                    size=\"small\"\r\n                    placeholder=\"Search\"\r\n                    @input=\"handleColumnFilter\"\r\n                    @click.stop\r\n                  />\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n          </template>\r\n          \r\n        </el-table>\r\n\r\n        <div class=\"pagination-container\">\r\n          <el-pagination\r\n            v-model:current-page=\"currentPage\"\r\n            v-model:page-size=\"pageSize\"\r\n            :total=\"filteredTableData.length\"\r\n            :page-sizes=\"[50, 100, 200]\"\r\n            layout=\"total, sizes, prev, pager, next\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n\r\n        <el-dialog\r\n          :title=\"dialogTitle\"\r\n          v-model=\"dialogVisible\"\r\n          width=\"600px\"\r\n        >\r\n          <el-form\r\n            ref=\"formRef\"\r\n            :model=\"form\"\r\n            :rules=\"rules\"\r\n            label-width=\"120px\"\r\n          >\r\n            <template v-for=\"field in formFields\" :key=\"field.prop\">\r\n              <el-form-item :label=\"field.label\" :prop=\"field.prop\">\r\n                <el-select \r\n                  v-if=\"field.type === 'enum'\"\r\n                  v-model=\"form[field.prop]\"\r\n                  :placeholder=\"`Select ${field.label.toLowerCase()}`\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"opt in getEnumOptions(field.enumType)\"\r\n                    :key=\"opt.value\"\r\n                    :label=\"opt.label\"\r\n                    :value=\"opt.value\"\r\n                  />\r\n                </el-select>\r\n                <el-input-number\r\n                  v-else-if=\"field.type === 'number'\"\r\n                  v-model=\"form[field.prop]\"\r\n                  :precision=\"field.precision || 0\"\r\n                />\r\n                <el-input\r\n                  v-else\r\n                  v-model=\"form[field.prop]\"\r\n                  :type=\"field.inputType || 'text'\"\r\n                />\r\n              </el-form-item>\r\n            </template>\r\n          </el-form>\r\n          <template #footer>\r\n            <el-button @click=\"dialogVisible = false\">Cancel</el-button>\r\n            <el-button type=\"primary\" @click=\"handleSave\">Save</el-button>\r\n          </template>\r\n        </el-dialog>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed, watch } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { getDesignTable, upsertDesignRow, deleteDesignRow, refreshOSSOfOneDesign } from '@/api/design'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Search, CaretTop, CaretBottom } from '@element-plus/icons-vue'\r\nimport { getDesignConfig } from '@/config/design-config'\r\nimport { designTypes } from '@/config/menu-config'\r\n\r\ninterface FormData {\r\n  [key: string]: any\r\n}\r\n\r\ninterface TableItem {\r\n  [key: string]: any\r\n}\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst designName = computed(() => route.params.name as string)\r\nconst config = computed(() => getDesignConfig(designName.value))\r\n\r\nconst tableColumns = computed(() => config.value.tableColumns || [])\r\nconst formFields = computed(() => config.value.formFields || [])\r\nconst rules = computed(() => config.value.rules || {})\r\n\r\nconst tableData = ref<TableItem[]>([])\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst form = ref<FormData>({})\r\nconst loading = ref(false)\r\nconst searchQuery = ref('')\r\n\r\n// 添加排序和过滤状态\r\nconst sortBy = ref('')\r\nconst sortOrder = ref('ascending')\r\nconst columnFilters = ref<Record<string, string>>({})\r\n\r\n// 添加分页相关的响应式变量\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(50)\r\n\r\n// 添加刷新状态\r\nconst refreshing = ref(false)\r\n\r\nconst handleSearch = () => {\r\n  // 不需要实现具体逻辑，因为我们已经使用了计算属性 filteredTableData\r\n}\r\n\r\nconst filteredTableData = computed(() => {\r\n  let result = [...tableData.value]\r\n  \r\n  // 应用列过滤器\r\n  Object.entries(columnFilters.value).forEach(([prop, filterValue]) => {\r\n    if (filterValue) {\r\n      result = result.filter(item => {\r\n        const value = item[prop]\r\n        // 处理枚举类型\r\n        const col = tableColumns.value.find(c => c.prop === prop)\r\n        if (col?.type === 'enum') {\r\n          const enumName = getEnumName(value, col.enumType)\r\n          return enumName === filterValue  // 修改这里，使用完全匹配而不包含\r\n        }\r\n        // 其他类型的过滤保持不变\r\n        if (typeof value === 'number') {\r\n          return value.toString().includes(filterValue)\r\n        }\r\n        if (typeof value === 'string') {\r\n          return value.toLowerCase().includes(filterValue.toLowerCase())\r\n        }\r\n        return false\r\n      })\r\n    }\r\n  })\r\n\r\n  // 应用排序\r\n  if (sortBy.value) {\r\n    result.sort((a, b) => {\r\n      let aVal = a[sortBy.value]\r\n      let bVal = b[sortBy.value]\r\n      \r\n      // 处理枚举类型的排序\r\n      const col = tableColumns.value.find(c => c.prop === sortBy.value)\r\n      if (col?.type === 'enum') {\r\n        aVal = getEnumName(aVal, col.enumType)\r\n        bVal = getEnumName(bVal, col.enumType)\r\n      }\r\n      \r\n      if (aVal === bVal) return 0\r\n      const result = aVal > bVal ? 1 : -1\r\n      return sortOrder.value === 'ascending' ? result : -result\r\n    })\r\n  }\r\n  \r\n  return result\r\n})\r\n\r\n// 添加分页后的数据计算属性\r\nconst paginatedData = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value\r\n  const end = start + pageSize.value\r\n  return filteredTableData.value.slice(start, end)\r\n})\r\n\r\n// 处理排序变化\r\nconst handleSortChange = ({ prop, order }: { prop: string, order: string }) => {\r\n  sortBy.value = prop\r\n  sortOrder.value = order || 'ascending'\r\n}\r\n\r\n// 处理列过滤\r\nconst handleColumnFilter = () => {\r\n  // 过滤逻辑已在 computed 中处理\r\n}\r\n\r\n// 清除所有过滤器\r\nconst clearFilters = () => {\r\n  columnFilters.value = {}\r\n  sortBy.value = ''\r\n  sortOrder.value = 'ascending'\r\n}\r\n\r\nconst getEnumName = (value: number, enumType: any) => {\r\n  return enumType[value] || 'Unknown'\r\n}\r\n\r\nconst getEnumOptions = (enumType: any) => {\r\n  return Object.keys(enumType)\r\n    .filter(key => isNaN(Number(key)))\r\n    .map(label => ({\r\n      label,\r\n      value: enumType[label]\r\n    }))\r\n}\r\n\r\nconst loadData = async () => {\r\n  loading.value = true\r\n  clearFilters()\r\n  try {\r\n    const res = await getDesignTable(designName.value)\r\n    tableData.value = res.data ? JSON.parse(res.data.toString()) : []\r\n  } catch (error) {\r\n    console.error('Failed to load design data:', error)\r\n    ElMessage.error('加载设计数据失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst handleAdd = () => {\r\n  form.value = {}\r\n  dialogTitle.value = 'Add New Row'\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst handleEdit = (row: any) => {\r\n  form.value = { ...row }\r\n  dialogTitle.value = 'Edit Row'\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst handleSave = async () => {\r\n  try {\r\n    await upsertDesignRow({\r\n      designName: designName.value,\r\n      designData: form.value\r\n    })\r\n    dialogVisible.value = false\r\n    ElMessage.success('Saved successfully')\r\n    loadData()\r\n  } catch (error) {\r\n    console.error(error)\r\n    ElMessage.error('Save failed')\r\n  }\r\n}\r\n\r\nconst handleDelete = (row: any) => {\r\n  ElMessageBox.confirm('Are you sure to delete this row?', 'Warning', {\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    type: 'warning'\r\n  }).then(async () => {\r\n    console.log(`${designName.value}Id`.replace(\"HW\",\"\"))\r\n    try {\r\n      await deleteDesignRow({\r\n        designName: designName.value,\r\n        designId: row[`${designName.value}Id`.replace(\"HW\",\"\")]\r\n      })\r\n      ElMessage.success('Delete successfully')\r\n      loadData()\r\n    } catch (error) {\r\n      console.error(error)\r\n      ElMessage.error('Delete failed')\r\n    }\r\n  })\r\n}\r\n\r\n// 添加刷新 OSS 处理函数\r\nconst handleRefreshOSS = async () => {\r\n  refreshing.value = true\r\n  try {\r\n    await refreshOSSOfOneDesign(designName.value)\r\n    ElMessage.success('OSS 刷新成功')\r\n  } catch (error) {\r\n    console.error('Failed to refresh OSS:', error)\r\n    ElMessage.error('OSS 刷新失败')\r\n  } finally {\r\n    refreshing.value = false\r\n  }\r\n}\r\n\r\n// 监听路由变化\r\nwatch(\r\n  () => route.params.name,\r\n  () => {\r\n    loadData()  // 重新加载数据\r\n  }\r\n)\r\n\r\n// 添加处理设计表选择的方法\r\nconst handleDesignSelect = (name: string) => {\r\n  router.push(`/design/${name}`)\r\n}\r\n\r\n// 添加分页处理方法\r\nconst handleSizeChange = (val: number) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\nconst handleCurrentChange = (val: number) => {\r\n  currentPage.value = val\r\n}\r\n\r\nonMounted(() => {\r\n  loadData()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.design-container {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  /* overflow: hidden; */\r\n}\r\n\r\n.design-sidebar {\r\n  max-width: 220px;\r\n  width: 15vw;\r\n  height: 100%;\r\n  border-right: 1px solid var(--el-border-color-light);\r\n  background-color: var(--el-menu-bg-color);\r\n  flex-shrink: 0;\r\n  position: sticky;\r\n  top: 0;\r\n}\r\n\r\n.design-menu {\r\n  border-right: none;\r\n}\r\n\r\n.design-content {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 0;\r\n  width: 80vw;\r\n}\r\n\r\n.error-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: calc(100vh - 120px);\r\n}\r\n\r\n.table-header {\r\n  flex-shrink: 0;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n:deep(.el-table .cell) {\r\n  word-break: break-word;\r\n}\r\n\r\n:deep(.el-input__wrapper) {\r\n  padding: 0 5px;\r\n}\r\n\r\n:deep(.el-input__inner) {\r\n  height: 24px;\r\n}\r\n\r\n.column-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.header-title {\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  height: 24px;\r\n  white-space: nowrap;\r\n  overflow: visible;\r\n}\r\n\r\n.sort-icon {\r\n  margin-left: 6px;\r\n  font-size: 14px;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n:deep(.el-table__header) th {\r\n  padding: 4px 8px !important;\r\n}\r\n\r\n:deep(.el-table .sort-icon) {\r\n  margin-left: 6px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n:deep(.el-table__column-filter-trigger) {\r\n  display: none;\r\n}\r\n\r\n:deep(.el-table .caret-wrapper) {\r\n  display: none;\r\n}\r\n\r\n.column-filter {\r\n  width: 100%;\r\n}\r\n\r\n:deep(.el-select .el-input__wrapper) {\r\n  padding: 0 8px;\r\n}\r\n\r\n:deep(.el-select .el-input__inner) {\r\n  height: 24px;\r\n  font-size: 12px;\r\n}\r\n\r\n:deep(.el-select .el-input__suffix) {\r\n  height: 24px;\r\n}\r\n\r\n.menu-header {\r\n  height: 50px;\r\n  line-height: 50px;\r\n  padding: 0 20px;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background-color: var(--el-menu-bg-color);\r\n  border-bottom: 1px solid var(--el-border-color-light);\r\n}\r\n\r\n.design-menu {\r\n  border-right: none;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  /* justify-content: flex-end; */\r\n  flex-shrink: 0;\r\n}\r\n\r\n:deep(.el-table) {\r\n  flex: 1;\r\n  overflow: auto;\r\n}\r\n\r\n.table-operations {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n</style> "],"names":["AbilityType","AbilityAttribute","AbilityBuffUsage","ActionType","ActionSubType","EffectAnchorTarget","EffectAnchorType","FeedbackType","EffectType","BaseFurnitureType","BuffType","BuffTarget","BuffCheckTiming","ChipType","ChipUsage","ChipPackType","EventType","EventTarget","StringSourceType","LanguageType","getDesignTable","designName","request","upsertDesignRow","params","deleteDesignRow","refreshOSSOfOneDesign","calculateColumnWidth","label","configs","getDesignConfig","route","useRoute","router","useRouter","computed","config","tableColumns","formFields","rules","tableData","ref","dialogVisible","dialogTitle","form","loading","sortBy","sortOrder","columnFilters","currentPage","pageSize","refreshing","filteredTableData","result","prop","filterValue","item","value","col","c","getEnumName","a","b","aVal","bVal","paginatedData","start","end","handleSortChange","order","handleColumnFilter","clearFilters","enumType","getEnumOptions","key","loadData","res","error","ElMessage","handleAdd","handleEdit","row","handleSave","handleDelete","ElMessageBox","handleRefreshOSS","watch","handleDesignSelect","name","handleSizeChange","val","handleCurrentChange","onMounted"],"mappings":"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"}