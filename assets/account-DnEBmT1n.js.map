{"version":3,"file":"account-DnEBmT1n.js","sources":["../../../src/api/account.ts"],"sourcesContent":["import type { ApiResponseBase, AssignRecordToSessionRequest, QueryTestBattleRecordRequest, QueryTestBattleRecordResponse, UpsertTestBattleRecordRequest, UpsertTestBattleRecordResponse } from '@/types/api'\r\nimport request from '@/api/request'\r\nimport type { HWCharacterSession } from '@/shared_models/generated/HWCharacterSession'\r\n\r\n// export function queryTestBattleRecord(){\r\n//   return get<QueryTestBattleRecordResponse>('/admin/AdminAccountManagement/QueryTestBattleRecord')\r\n// }\r\n\r\nexport async function queryTestBattleRecord(params: QueryTestBattleRecordRequest): Promise<QueryTestBattleRecordResponse> {\r\n  const response = await request({\r\n    url: '/admin/AdminAccountManagement/QueryTestBattleRecord',\r\n    method: 'post',\r\n    data: params\r\n  })\r\n  return response as any as QueryTestBattleRecordResponse\r\n}\r\n\r\n\r\n\r\n  \r\nexport function upsertTestRecord(params: UpsertTestBattleRecordRequest) {\r\n    return request<UpsertTestBattleRecordResponse>({\r\n      url: '/admin/AdminAccountManagement/UpsertTestBattleRecord',\r\n      method: 'post',\r\n      params,\r\n      data: params\r\n    })\r\n  }\r\n\r\n\r\n  export function assignRecordToSession(params: AssignRecordToSessionRequest) {\r\n    return request<ApiResponseBase>({\r\n      url: '/admin/AdminAccountManagement/AssignBattleRecordToSystemSession',\r\n      method: 'post',\r\n      params,\r\n      data: params\r\n    })\r\n  }\r\n\r\ninterface QueryCharacterSessionsRequest {\r\n  connectKey: string\r\n  count: number\r\n}\r\n\r\ninterface QueryCharacterSessionsResponse {\r\n  sessions: HWCharacterSession[]\r\n}\r\n\r\ninterface UpdateCharacterSessionRequest {\r\n  session: HWCharacterSession\r\n}\r\n\r\ninterface UpdateCharacterSessionResponse {\r\n  session: HWCharacterSession\r\n}\r\n\r\nexport async function queryCharacterSessions(params: QueryCharacterSessionsRequest): Promise<QueryCharacterSessionsResponse> {\r\n  const r =  await request<QueryCharacterSessionsResponse>({\r\n    url: '/admin/AdminCharacterSession/QueryLastXCharacterSession',\r\n    method: 'post',\r\n    data: params\r\n  }) \r\n  return r as any as QueryCharacterSessionsResponse\r\n}\r\n\r\nexport async function updateCharacterSession (data: UpdateCharacterSessionRequest): Promise<UpdateCharacterSessionResponse>{\r\n  return request<UpdateCharacterSessionResponse>({\r\n    url: '/admin/AdminCharacterSession/UpdateSessionData',\r\n    method: 'post',\r\n    data: data\r\n  }) as any as UpdateCharacterSessionResponse\r\n}"],"names":["queryTestBattleRecord","params","request","upsertTestRecord","assignRecordToSession","queryCharacterSessions","updateCharacterSession","data"],"mappings":"0CAQA,eAAsBA,EAAsBC,EAA8E,CAMjH,OALU,MAAMC,EAAQ,CAC7B,IAAK,sDACL,OAAQ,OACR,KAAMD,CAAA,CACP,CAEH,CAKO,SAASE,EAAiBF,EAAuC,CACpE,OAAOC,EAAwC,CAC7C,IAAK,uDACL,OAAQ,OACR,OAAAD,EACA,KAAMA,CAAA,CACP,CACH,CAGO,SAASG,EAAsBH,EAAsC,CAC1E,OAAOC,EAAyB,CAC9B,IAAK,kEACL,OAAQ,OACR,OAAAD,EACA,KAAMA,CAAA,CACP,CACH,CAmBF,eAAsBI,EAAuBJ,EAAgF,CAMpH,OALI,MAAMC,EAAwC,CACvD,IAAK,0DACL,OAAQ,OACR,KAAMD,CAAA,CACP,CAEH,CAEA,eAAsBK,EAAwBC,EAA6E,CACzH,OAAOL,EAAwC,CAC7C,IAAK,iDACL,OAAQ,OACR,KAAAK,CAAA,CACD,CACH"}